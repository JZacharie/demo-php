apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oro-sbx
  namespace: argo-cd
spec:
  destination:
    namespace: oro-sbx
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: nginx-php
    helm:
      values: |-
        image:
          repository: nginx
          tag: 1.25.3
          pullPolicy: IfNotPresent
          
        # securityContext: 
        #   runAsUser: 1000
        #   runAsGroup: 1000

        env:
          TZ: UTC
          PIMCORE_INSTALL_ADMIN_PASSWORD: admin
          PIMCORE_INSTALL_ADMIN_USERNAME: admin
          PIMCORE_INSTALL_MYSQL_PASSWORD: pimcore
          PIMCORE_INSTALL_MYSQL_USERNAME: pimcore
          PIMCORE_INSTALL_MYSQL_HOST_SOCKET: pimcore-sbx-mysql-headless.pimcore-sbx.svc
          PIMCORE_INSTALL_MYSQL_DATABASE: pimcore
          PIMCORE_INSTALL_INSTALL_BUNDLES: PimcoreDataHubBundle
          PIMCORE_INSTALL_SMTP: "smtps://serviceaccountsmtp:changeit@smtp.societe.io:463"

        hostname: php

        service:
          main:
            ports:
              http:
                port: 80

        configmap:
          config:
            enabled: true
            labels: {}
            annotations: {}
            data: 
                default.conf: |
                  # mime types are already covered in nginx.conf
                  #include mime.types;

                  upstream php-pimcore10 {
                      server php:9000;
                  }

                  map $args $static_page_root {
                      default                                 /var/tmp/pages;
                      "~*(^|&)pimcore_editmode=true(&|$)"     /var/nonexistent;
                      "~*(^|&)pimcore_preview=true(&|$)"      /var/nonexistent;
                      "~*(^|&)pimcore_version=[^&]+(&|$)"     /var/nonexistent;
                  }

                  map $uri $static_page_uri {
                      default                                 $uri;
                      "/"                                     /%home;
                  }

                  server {
                      listen [::]:80 default_server;
                      listen 80 default_server;

                      #server_name pimcore.localhost;

                      root /var/www/html/public;
                      index index.php;

                      # Filesize depending on your data
                      client_max_body_size 100m;

                      # It is recommended to seclude logs per virtual host
                      #access_log  /var/log/access.log;
                      #error_log   /var/log/error.log error;

                      # Protected Assets
                      #
                      ### 1. Option - Restricting access to certain assets completely
                      #
                      # location ~ ^/protected/.* {
                      #   return 403;
                      # }
                      # location ~ ^/var/.*/protected(.*) {
                      #   return 403;
                      # }
                      #
                      # location ~ ^/cache-buster\-[\d]+/protected(.*) {
                      #   return 403;
                      # }
                      #
                      ### 2. Option - Checking permissions before delivery
                      #
                      # rewrite ^(/protected/.*) /index.php$is_args$args last;
                      #
                      # location ~ ^/var/.*/protected(.*) {
                      #   return 403;
                      # }
                      #
                      # location ~ ^/cache-buster\-[\d]+/protected(.*) {
                      #   return 403;
                      # }

                      # Pimcore Head-Link Cache-Busting
                      rewrite ^/cache-buster-(?:\d+)/(.*) /$1 last;

                      # Stay secure
                      #
                      # a) don't allow PHP in folders allowing file uploads
                      location ~* /var/assets/.*\.php(/|$) {
                          return 404;
                      }

                      # b) Prevent clients from accessing hidden files (starting with a dot)
                      # Access to `/.well-known/` is allowed.
                      # https://www.mnot.net/blog/2010/04/07/well-known
                      # https://tools.ietf.org/html/rfc5785
                      location ~* /\.(?!well-known/) {
                          deny all;
                          log_not_found off;
                          access_log off;
                      }

                      # c) Prevent clients from accessing to backup/config/source files
                      location ~* (?:\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
                          deny all;
                      }

                      # Some Admin Modules need this:
                      # Server Info, Opcache
                      location ~* ^/admin/external {
                          rewrite .* /index.php$is_args$args last;
                      }

                      # Thumbnails
                      location ~* .*/(image|video)-thumb__\d+__.* {
                          try_files /var/tmp/thumbnails$uri /index.php;
                          expires 2w;
                          access_log off;
                          add_header Cache-Control "public";
                      }

                      # Assets
                      # Still use a whitelist approach to prevent each and every missing asset to go through the PHP Engine.
                      location ~* ^(?!/admin|/asset/webdav)(.+?)\.((?:css|js)(?:\.map)?|jpe?g|gif|png|svgz?|eps|exe|gz|zip|mp\d|m4a|ogg|ogv|webp|webm|pdf|docx?|xlsx?|pptx?)$ {
                          try_files /var/assets$uri $uri =404;
                          expires 2w;
                          access_log off;
                          log_not_found off;
                          add_header Cache-Control "public";
                      }

                      location / {
                          error_page 404 /meta/404;
                          try_files $static_page_root$static_page_uri.html $uri /index.php$is_args$args;
                      }

                      # Use this location when the installer has to be run
                      # location ~ /(index|install)\.php(/|$) {
                      #
                      # Use this after initial install is done:
                      location ~ ^/index\.php(/|$) {
                          send_timeout 1800;
                          fastcgi_read_timeout 1800;
                          # regex to split $uri to $fastcgi_script_name and $fastcgi_path_info
                          fastcgi_split_path_info ^(.+\.php)(/.+)$;
                          # Check that the PHP script exists before passing it
                          #try_files $fastcgi_script_name =404;
                          # include fastcgi.conf if needed
                          include fastcgi_params;
                          # Bypass the fact that try_files resets $fastcgi_path_info
                          # see: http://trac.nginx.org/nginx/ticket/321
                          set $path_info $fastcgi_path_info;
                          fastcgi_param PATH_INFO $path_info;

                          # Activate these, if using Symlinks and opcache
                          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                          fastcgi_param DOCUMENT_ROOT $realpath_root;

                          # Mitigate https://httpoxy.org/ vulnerabilities
                          fastcgi_param HTTP_PROXY "";

                          fastcgi_pass php-pimcore10;
                          # Prevents URIs that include the front controller. This will 404:
                          # http://domain.tld/index.php/some-path
                          # Remove the internal directive to allow URIs like this
                          internal;
                      }

                      # PHP-FPM Status and Ping
                      location /fpm- {
                          access_log off;
                          include fastcgi_params;
                          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                          location /fpm-status {
                              allow 127.0.0.1;
                              # add additional IP's or Ranges
                              deny all;
                              fastcgi_pass php-pimcore10;
                          }
                          location /fpm-ping {
                              fastcgi_pass php-pimcore10;
                          }
                      }
                      # nginx Status
                      # see: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
                      location /nginx-status {
                          allow 127.0.0.1;
                          deny all;
                          access_log off;
                          stub_status;
                      }
                  }

                install.sh: |
                  fichier="/var/www/html/installed.lock" 
                  if [ ! -e "$fichier" ]; then
                      echo "Installation de la démo de pimcore"
                      echo "Patch de la mémoire de PHP"
                      sed -i "s|memory_limit = 256M|memory_limit = 512M|" /usr/local/etc/php/conf.d/20-pimcore.ini
                      composer create-project pimcore/demo . 
                      vendor/bin/pimcore-install --no-interaction
                      composer require pimcore/data-importer
                      bin/console pimcore:bundle:list
                      bin/console pimcore:search-backend-reindex
                      chown 1000:1000 . -R
                      touch "$fichier" 
                  else
                      echo "Le fichier existe déjà. La commande ne sera pas exécutée."
                  fi
                  sleep 5

        initContainers:
          onestart-container:
            image: "pimcore/pimcore:php8.2-latest"
            command: ['sh', '-c',   'cp /var/www/script/install.sh /tmp/install.sh && chmod +x /tmp/install.sh && /tmp/install.sh']
            volumeMounts:
              - name: pimcorewww
                mountPath: /var/www/html
              - name: nginx
                mountPath: /var/www/script
            env:
              - name: PIMCORE_INSTALL_ADMIN_PASSWORD
                value: admin
              - name: PIMCORE_INSTALL_ADMIN_USERNAME
                value: admin
              - name: PIMCORE_INSTALL_INSTALL_BUNDLES
                value: PimcoreDataHubBundle
              - name: PIMCORE_INSTALL_MYSQL_DATABASE
                value: pimcore
              - name: PIMCORE_INSTALL_MYSQL_HOST_SOCKET
                value: pimcore-sbx-mysql-headless.pimcore-sbx.svc
              - name: PIMCORE_INSTALL_MYSQL_PASSWORD
                value: pimcore
              - name: PIMCORE_INSTALL_MYSQL_USERNAME
                value: pimcore
              - name: PIMCORE_INSTALL_SMTP
                value: 'smtps://serviceaccountsmtp:changeit@smtp.societe.io:463'

            # securityContext:
            #   runAsUser: 1000
            #   runAsGroup: 1000   

        additionalContainers:

          php-fpm:
            image: "pimcore/pimcore:php8.2-debug-latest"
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 9000
            resources:
                limits:
                    cpu: 5000m
                    ephemeral-storage: 1Gi
                    memory: 5120Mi
                requests:
                    cpu: 1000m
                    ephemeral-storage: 1Gi
                    memory: 1024Mi
            volumeMounts:
              - name: pimcorewww
                mountPath: /var/www/html
            securityContext:
              runAsUser: 1000
              runAsGroup: 1000              
                
        ingress:
         main:
          enabled: true
          annotations: 
            kubernetes.io/ingress.class: traefik
          hosts:
            - host: pimcore-sbx.p.zacharie.org
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            - hosts:
                - pimcore-sbx.p.zacharie.org
              secretName: wildcard-zacharie-org-certificate-secret

        persistence:
          pimcorewww:
            enabled: true
            mountPath: /var/www/html
            size: 10Gi
            accessMode: "ReadWriteMany"
          nginx:
            name: pimcore-sbx-nginx-php-config
            enabled: true
            mountPath: /etc/nginx/conf.d
            type: configMap 
            configMapName: pimcore-sbx-nginx-php-config
            
    repoURL: https://k8s-at-home.com/charts
    targetRevision: 1.2.2
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
